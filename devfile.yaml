schemaVersion: 2.2.0
metadata:
  name: omf-parent
components:
  - name: tooling-container
    container:
      image: quay.io/devspaces/ansible-creator-ee@sha256:3128cce4c1f2c1600db7750ad8b1b0cc655fb59c621d982c863c24696c4bd68c
      memoryRequest: 256M
      memoryLimit: 6Gi
      cpuRequest: 250m
      cpuLimit: 2000m
      args: ["tail", "-f", "/dev/null"]
      env:
        - name: "ANSIBLE_COLLECTIONS_PATH"
          value: "~/.ansible/collections:/usr/share/ansible/collections:/projects/ansible-devspaces-poc/collections"
projects:
  - name: ansible-devspaces-poc
    git:
      remotes:
        origin: "https://github.com/ahill-omf/ansible-devspaces-poc.git"
variables:
  molecule_working_dir: "${PROJECT_SOURCE}"
commands:
  - id: oc-install
    exec:
      commandLine: "/usr/local/bin/ansible-playbook ${PROJECT_SOURCE}/playbooks/install_oc.yml"
      workingDir: molecule_working_dir
      group:
        kind: build
        isDefault: true
      component: tooling-container
  - id: molecule-create
    exec:
      label: "Molecule 01: start a test pod for the automation"
      commandLine: "source $HOME/.bashrc && molecule create"
      workingDir: molecule_working_dir
      group:
        kind: run
        isDefault: true
      component: tooling-container
  - id: molecule-list
    exec:
      label: "Molecule 02: view the test instance that was created"
      commandLine: "source $HOME/.bashrc && molecule list"
      workingDir: molecule_working_dir
      group:
        kind: run
        isDefault: true
      component: tooling-container

  - id: molecule-verify
    exec:
      label: "Molecule 03: run the verification against the test pod"
      commandLine: "source $HOME/.bashrc && molecule verify"
      workingDir: molecule_working_dir
      group:
        kind: run
        isDefault: true
      component: tooling-container

  - id: molecule-converge
    exec:
      label: "Molecule 04: apply the role to the pod"
      commandLine: "source $HOME/.bashrc && molecule converge"
      workingDir: molecule_working_dir
      group:
        kind: run
        isDefault: true
      component: tooling-container

  - id: molecule-destroy
    exec:
      label: "Molecule 05: reset the test pod back to a fresh instance"
      commandLine: "source $HOME/.bashrc && molecule destroy"
      workingDir: molecule_working_dir
      group:
        kind: run
        isDefault: true
      component: tooling-container

  - id: molecule-test
    exec:
      label: "Molecule 06: run the full molecule test"
      commandLine: "source $HOME/.bashrc && molecule test"
      workingDir: molecule_working_dir
      group:
        kind: run
        isDefault: true
      component: tooling-container

  - id: molecule-test
    exec:
      label: "Molecule 07: login to molecule containers"
      commandLine: "source $HOME/.bashrc && molecule login"
      workingDir: molecule_working_dir
      group:
        kind: debug
        isDefault: true
      component: tooling-container

  - id: ansible-navigator
    exec:
      label: "Ansible-Navigator: Start ansible-navigator"
      commandLine: |
        if [ ! -d "$HOME/.cache/ansible-navigator" ]; then
          mkdir -p "$HOME/.cache/ansible-navigator"
        fi
        cp /usr/local/lib/python3.11/site-packages/ansible_navigator/data/catalog_collections.py $HOME/.cache/ansible-navigator
        ansible-navigator --ee false
      workingDir: ${PROJECTS_ROOT}/ansible-devspaces-poc
      component: tooling-container
  - id: project-create
    exec:
      label: "Project 01: Create new project skeleton"
      commandLine: "ansible-playbook playbooks/init_project.yml"
      workingDir: ${PROJECTS_ROOT}/ansible-devspaces-poc
      component: tooling-container
  - id: project-retarget
    exec:
      label: "Project 02: Retarget Project"
      commandLine: "ansible-playbook playbooks/retarget_project.yml"
      group:
        kind: run
        isDefault: false
      component: tooling-container
events:
  postStart:
    - "oc-install"
